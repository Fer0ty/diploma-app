import React, {useEffect, useState} from 'react';
import {Link} from 'react-router-dom';
import {useTheme} from '../../context/ThemeContext';
import './LandingNav.css';

const LandingNav = () => {
    const {isDarkMode, toggleTheme} = useTheme();
    const [scrolled, setScrolled] = useState(false);

    useEffect(() => {
        const handleScroll = () => {
            if (window.scrollY > 50) {
                setScrolled(true);
            } else {
                setScrolled(false);
            }
        };

        window.addEventListener('scroll', handleScroll);

        return () => {
            window.removeEventListener('scroll', handleScroll);
        };
    }, []);

    return (
        <nav className={`landing-nav ${scrolled ? 'scrolled' : ''}`}>
            <div className="landing-nav-container">
                <div className="landing-nav-logo">
                    <Link to="/">–†–µ–¥–∞–∫—Ç–æ—Ä –ú–∞–≥–∞–∑–∏–Ω–∞</Link>
                </div>

                <div className="landing-nav-right">
                    <button
                        className="landing-theme-toggle"
                        onClick={toggleTheme}
                        aria-label={isDarkMode ? '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Å–≤–µ—Ç–ª—É—é —Ç–µ–º—É' : '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ —Ç–µ–º–Ω—É—é —Ç–µ–º—É'}
                    >
                        {isDarkMode ? '‚òÄÔ∏è' : 'üåô'}
                    </button>

                    <Link to="/login" className="landing-nav-login">–í—Ö–æ–¥</Link>
                    <Link to="/register" className="landing-nav-register">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</Link>
                </div>
            </div>
        </nav>
    );
};

export default LandingNav;